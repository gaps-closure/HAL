// An example configuration file for the GAPS HAL service to support
// BE EOP loopback
// November, 2020

// List of HAL interfaces.
devices =
(
  {
   // xdd0: HAL-Application Link
   enabled      = 1;
   id           = "xdd0";
   path         = "./zc/zc";                  // ZCAT command
   model        = "sdh_ha_v1";                // HAL Packet format
   comms        = "ipc";                      // Unix IPC socket
   mode_in      = "sub";                      // ZMQ subscriber from APP
   mode_out     = "pub";                      // ZMQ publisher to APP
   addr_in      = "ipc:///tmp/halpubbeorange";  // URI for ZMQ pub
   addr_out     = "ipc:///tmp/halsubbeorange";  // URI for ZMQ sub
  },
  {
    // HAL-CDG Link
    enabled      = 1;
    id           = "xdd1";
    path         = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v2";               // ILIP Immediate packet
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "/dev/gaps_ilip_1_read";   // ILIP device where HAL reads data
    path_w       = "";                        // ILIP device where HAL writes data
    from_mux     = 1;                         // Application 'from_mux' ID
    init_enable  = 1;                         // Config via root, even if disabled
  },
  {
    // HAL-CDG Link
    enabled      = 1;
    id           = "xdd2";
    path         = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v3";               // ILIP Payload DMA packet
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "";                        // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_2_write";  // ILIP device where HAL writes data
    from_mux     = 2;                         // Application 'from_mux' ID
    init_enable  = 1;                         // Config via root, even if disabled
  }
)

// HAL Routing Maps
maps =
(
  {
    // B1) Orange reads position (t=1) data from Green
    from_dev = "xdd1";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B2) Orange writes position (t=1) data to Green
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd2";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B3) Orange writes distance (t=2) data to Green
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 2;
    to_dev   = "xdd2";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 2;
    codec    = "NULL";
  },
  {
    // C1) Orange reads raw (t=7777) data from Green
    from_dev = "xdd1";
    from_mux = 1;
    from_sec = 1;
    from_typ = 3;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 3;
    codec    = "NULL";
  },
  {
    // C2) Orange writes position (t=1) data to Green
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 3;
    from_typ = 3;
    to_dev   = "xdd2";
    to_mux   = 2;
    to_sec   = 3;
    to_typ   = 3;
    codec    = "NULL";
  }
)
