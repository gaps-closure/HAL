// An example configuration file for the GAPS HAL service to support
// ORANGE Application uses a REPLY API. Network uses a BE ILIP loopback device
// June, 2020

// List of HAL interfaces.
devices =
(
  {
   // xdd0: HAL-Application Link
   enabled      = 1;
   id           = "xdd0";
   path         = "./zc/zc";                   // HAL child process script that forwards packets between HAL and APP (ZCAT)
   model        = "sdh_ha_v1";                 // Packet format between HAL and APP
   comms        = "ipc";                       // Tyoe of communication (Unix IPC socket)
//   mode_in      = "rep";                       // ZMQ messaging pattern HAL uses to when connected to the APP
//   addr_in      = "ipc:///tmp/reqbegreen";     // Address URI to which HAL binds and local APP waits connects
   mode_out     = "req";                       // ZMQ messaging pattern HAL uses to when connected to the APP
   addr_out     = "ipc:///tmp/repbeorange";    // Address URI to which HAL binds and local APP waits connects
  },
  {
    // xdd7: HAL-CDG Link (2 of 2 Levels)
    enabled      = 1;
    id           = "xdd7";
    path         = "/dev/gaps_ilip_0_root";   // ILIP root device for initialization
    model        = "sdh_be_v1";               // Packet format between HAL and APP (April 2020 BE packet model)
    comms        = "ilp";                     // Tyoe of communication (serial ILIP, with root and unidirectional devices)
    path_r       = "/dev/gaps_ilip_1_read";   // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_2_write";  // ILIP device where HAL writes data
    from_mux     = 2;                         // Application 'from_mux' ID
    init_enable  = 0;                         // Configure ILIP root device if init_enable=1 (else assume already initializated)
  }
)

// HAL Routing Maps
maps =
(
  //
  // B) Orange Enclave Maps for 6 month Demo: 1<-, 2->
  //
  {
    // B1) Orange reads position (TYPE = 1) data (from Green), forwarding from xdd7 to xdd0
    from_dev = "xdd7";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B2) Orange writes position (TYPE = 1) data (to Green), forwarding from xdd0 to xdd7
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B3) Orange writes distance (TYPE = 1) data (to Green), forwarding from xdd0 to xdd7
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 2;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 2;
    codec    = "NULL";
  }
)
