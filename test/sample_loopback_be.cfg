// An example configuration file for the GAPS HAL service to support
// BE loopback
// March 23, 2020

// List of HAL interfaces.
devices =
(
  {
   // xdd0: HAL-Application Link
   enabled      = 1;
   id           = "xdd0";
   path_in      = "./zc/zc";                  // ZCAT command
   model        = "sdh_ha_v1";                // HAL Packet format
   comms        = "ipc";                      // Unix IPC socket
   mode_in      = "sub";                      // ZMQ subscriber from APP
   mode_out     = "pub";                      // ZMQ publisher to APP
   // network addresses are defined by xdcomms API
  },
  {
    // xdd6: HAL-CDG Link (1 of 2 Levels)
    enabled      = 1;
    id           = "xdd6";
    path_in      = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v1";               // BE: April 2020 packet model
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "/dev/gaps_ilip_1_read";   // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_1_write";  // ILIP device where HAL writes data
    from_mux     = 1;                         // Application 'from_mux' ID
    // network addresses/ports are defined by network emulator
  },
  {
    // xdd7: HAL-CDG Link (2 of 2 Levels)
    enabled      = 1;
    id           = "xdd7";
    path_in      = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v1";               // BE: April 2020 packet model
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "/dev/gaps_ilip_2_read";   // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_2_write";  // ILIP device where HAL writes data
    from_mux     = 2;                         // Application 'from_mux' ID
    // network addresses/ports are defined by network emulator
  }
)

// HAL Routing Maps
maps =
(
  //
  // A) Green Enclave Maps for 6 month Demo: 1->, 2<-, 11->, 12<-
  //
  {
    // A1) Green writes position (t=1) data to Orange using its xdd6 device
    from_dev = "xdd0";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd6";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // A2) Green reads position (t=1) data from Orange using its xdd7 device
    // TODO: Remap, since xdd7 only accepts data typ = 2 and 3
    from_dev = "xdd7";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // A3) Green reads distance (t=2) data from Orange using its xdd7 device
    from_dev  = "xdd7";
    from_mux  = 2;
    from_sec  = 2;
    from_typ  = 2;
    to_dev    = "xdd0";
    to_mux    = 2;
    to_sec    = 2;
    to_typ    = 2;
    codec     = "NULL";
  },
  //
  // B) Orange Enclave Maps for 6 month Demo: 1<-, 2->, 11<-, 12->
  //
  {
    // B1) Orange reads position (t=1) data from Green using its xdd6 device
    from_dev = "xdd6";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B2) Orange writes position (t=1) data to Green using its xdd7 device
    // TODO: Remap, since xdd7 only accepts data typ = 2 and 3
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B3) Orange writes distance (t=2) data to Green using its xdd7 device
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 2;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 2;
    codec    = "NULL";
  }
)
