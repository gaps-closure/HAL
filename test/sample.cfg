// An example configuration file for the GAPS HAL service to support
// multiple communication patterns between multiple Applicaitons
// using multiple Cross Domain Gateways (CDGs)
// March 23, 2020

// List of HAL interfaces.
// Only the first 5 parameters are required;
// optional parameters are used only for certain interface types.
devices = 
(
  {
   // xdd0: HAL-Application Link
   enabled      = 1;
   id           = "xdd0";
   path         = "./zc/zc";                  // ZCAT command
   model        = "sdh_ha_v1";                // HAL Packet format
   comms        = "ipc";                      // Unix IPC socket
   mode_in      = "sub";                      // ZMQ subscriber from APP
   mode_out     = "pub";                      // ZMQ publisher to APP
   // network addresses are defined by xdcomms API
  },
  {
    // xdd1: HAL-CDG Link (Emulated or testing)
    enabled      = 0;
    id           = "xdd1";
    path         = "/dev/vcom1";              // April 2020 compressed header
    model        = "sdh_be_v1";               // BE: April 2020 packet model
    comms        = "tty";                     // Bidiretional Serial Port
    // network addresses/ports are defined by network emulator
  },
  {
    // xdd2: HAL-CDG Link (Emulated or testing)
    enabled      = 0;
    id           = "xdd2";
    path         = "/dev/vcom1";              // April 2020 compressed header
    model        = "sdh_be_v2";               // 2019 packet model (no timestamps)
    comms        = "tty";                     // Bidiretional Serial Port
    // network addresses/ports are defined by network emulator
  },
  {
    // xdd3: HAL-CDG Link  (Emulated or testing)
    enabled      = 1;
    id           = "xdd3";
    path         = "mind1";                      // localhost for testing
    model        = "sdh_bw_v1";               // April 2020 compressed header
    comms        = "udp";                     // Emulated UDP network connetion
    addr_out     = "10.0.0.1";               // address of listener on CDG
    port_out     = 50000;                     // port of listener on CDG
    addr_in      = "10.0.1.2";               // address of listener on HAL
    port_in      = 6788;                      // port of listener on HAL
  },
  {
    // xdd6: HAL-CDG Link (1 of 2 Levels)
    enabled      = 1;
    id           = "xdd6";
    path_in      = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v1";               // BE: April 2020 packet model
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "/dev/gaps_ilip_1_read";   // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_1_write";  // ILIP device where HAL writes data
    from_mux     = 1;                         // Application 'from_mux' ID
    // network addresses/ports are defined by network emulator
  },
  {
    // xdd7: HAL-CDG Link (2 of 2 Levels)
    enabled      = 1;
    id           = "xdd7";
    path_in      = "/dev/gaps_ilip_0_root";   // ILIP root device for setup
    model        = "sdh_be_v1";               // BE: April 2020 packet model
    comms        = "ilp";                     // ILIP using unidirectional devices
    path_r       = "/dev/gaps_ilip_2_read";   // ILIP device where HAL reads data
    path_w       = "/dev/gaps_ilip_2_write";  // ILIP device where HAL writes data
    from_mux     = 2;                         // Application 'from_mux' ID
    // network addresses/ports are defined by network emulator
  }
)

// HAL Routing Maps
maps =
(
  //
  // A) Green Enclave Maps for 6 month Demo: 1->, 2<-, 11->, 12<-
  //
  {
    // A1) Green writes position (t=1) data to Orange using its xdd6 device
    from_dev = "xdd0";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd6";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // A2) Green reads position (t=1) data from Orange using its xdd7 device
    // TODO: Remap, since xdd7 only accepts data typ = 2 and 3
    from_dev = "xdd7";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // A3) Green reads distance (t=2) data from Orange using its xdd7 device
    from_dev  = "xdd7";
    from_mux  = 2;
    from_sec  = 2;
    from_typ  = 2;
    to_dev    = "xdd0";
    to_mux    = 2;
    to_sec    = 2;
    to_typ    = 2;
    codec     = "NULL";
  },
  {
    // A11) Green writes position (t=1) data to Orange using its xdd3 device
    from_dev  = "xdd0";
    from_mux  = 11;
    from_sec  = 11;
    from_typ  = 1;
    to_dev    = "xdd3";
    to_ctag   = 65793;                         // compressed tag = 0x00010101
    codec     = "NULL";                        // no adu transform in HAL
  },
  {
    // A12) Green reads position (t=1) data from Orange using its xdd3 device
    from_dev  = "xdd3";
    from_ctag = 131585;                         // compressed tag = 0x00020201
    to_dev    = "xdd0";
    to_mux    = 12;
    to_sec    = 12;
    to_typ    = 1;
    codec     = "NULL";
  },
  {
    // A13) Green reads distance (t=2) data from Orange using its xdd3 device
    from_dev  = "xdd3";
    from_ctag = 131586;                        // compressed tag = 0x00020202
    to_dev    = "xdd0";
    to_mux    = 12;
    to_sec    = 12;
    to_typ    = 2;
    codec     = "NULL";
  },
  //
  // B) Orange Enclave Maps for 6 month Demo: 1<-, 2->, 11<-, 12->
  //
  {
    // B1) Orange reads position (t=1) data from Green using its xdd6 device
    from_dev = "xdd6";
    from_mux = 1;
    from_sec = 1;
    from_typ = 1;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B2) Orange writes position (t=1) data to Green using its xdd7 device
    // TODO: Remap, since xdd7 only accepts data typ = 2 and 3
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 1;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 1;
    codec    = "NULL";
  },
  {
    // B3) Orange writes distance (t=2) data to Green using its xdd7 device
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 2;
    from_typ = 2;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 2;
    to_typ   = 2;
    codec    = "NULL";
  },
  {
    // B11) Orange reads position (t=1) data from Green using its xdd3 device
    from_dev  = "xdd3";
    from_ctag = 65793;                        // compressed tag = 0x00010101
    to_dev    = "xdd0";
    to_mux    = 11;
    to_sec    = 11;
    to_typ    = 1;
    codec     = "NULL";
  },
  {
    // B12) Orange writes position (t=1) data to Green using its xdd3 device
    from_dev  = "xdd0";
    from_mux  = 12;
    from_sec  = 12;
    from_typ  = 1;
    to_dev    = "xdd3";
    to_ctag   = 131585;                        // compressed tag = 0x00020201
    codec     = "NULL";                        // no adu transform in HAL
  },
  {
    // B13) Orange writes distance (t=2) data to Green using its xdd3 device
    from_dev  = "xdd0";
    from_mux  = 12;
    from_sec  = 12;
    from_typ  = 2;
    to_dev    = "xdd3";
    to_ctag   = 131586;                        // compressed tag = 0x00020202
    codec     = "NULL";                        // no adu transform in HAL
  },
  //
  // C) Green Enclave Maps used for Initial Testing: 101->, 102<-, 5->, 6->
  //
  {
    // C1) Green writes PNT (t=101) data to Orange using its xdd6 device
    from_dev = "xdd0";
    from_mux = 1;
    from_sec = 1;
    from_typ = 101;
    to_dev   = "xdd6";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 3;
    codec    = "NULL";
  },
  {
    // C2) Green reads XYZ (t=102) data from Orange using its xdd7 device
    from_dev = "xdd7";
    from_mux = 2;
    from_sec = 3;       // change to 3 for testing
    from_typ = 3;       // change to 3 for testing
    to_dev   = "xdd0";
    to_mux   = 2;
    to_sec   = 3;
    to_typ   = 101;
    codec    = "NULL";
  },
  //
  // D) Orange Enclave Maps used for Initial Testing: 101<-, 102->, 5<-, 6<-
  //
  {
    // D1) Orange reads PNT (t=101) data from Green using its xdd6 device
    from_dev = "xdd6";
    from_mux = 1;
    from_sec = 1;
    from_typ = 3;
    to_dev   = "xdd0";
    to_mux   = 1;
    to_sec   = 1;
    to_typ   = 101;
    codec    = "NULL";
  },
  {
    // D2) Orange writes XYZ (t=102) data to Green using its xdd7 device
    from_dev = "xdd0";
    from_mux = 2;
    from_sec = 3;
    from_typ = 101;
    to_dev   = "xdd7";
    to_mux   = 2;
    to_sec   = 3;
    to_typ   = 3;
    codec    = "NULL";
  }
)
